name: test

on:
  push:
    branches:
      - "westpa2"
      - "develop"
  pull_request:
    branches:
      - "westpa2"
      - "develop"
  schedule:
    # Weekly tests run on "westpa2" and "develop" on Thursdays 3:30 PM UTC (which is 10:30/11:30 EST/EDT)
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "30 15 * * 4"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Linting
        run: |
          pip install pre-commit
          pre-commit run --all-files

  test:
    name: Test on Linux, Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
      with: 
        fetch-depth: 2

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    # More info on options: https://github.com/conda-incubator/setup-miniconda
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        miniforge-variant: Mambaforge
        environment-file: devtools/conda-envs/test_env.yaml
        activate-environment: test_env
        channel-priority: true
        auto-update-conda: true
        auto-activate-base: false
        show-channel-urls: true

    - name: Install package
      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        conda info --all
        python -m pip install . -v --no-deps
        conda list

    - name: Run tests
      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        pytest -v --cov=westpa --cov-report=xml --color=yes tests

    - name: CodeCov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-{{ '${{ matrix.os }}' }}-py{{ '${{ matrix.python-version }}' }}
        fail_ci_if_error: false

  install-dev:
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]

    name: "Verify dev env"
    runs-on: "${{ matrix.os }}"

    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-python@v4"
        with:
          python-version: "3.8"
      - name: "Install in dev mode"
        run: "python -m pip install -e .[dev]"
      - name: "Import package"
        run: "python -c 'import westpa; print(westpa.__version__)'"
